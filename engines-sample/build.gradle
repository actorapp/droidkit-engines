apply plugin: 'android'

def basicVersion = '0.1'
def customVersionCode = '10240';

if (project.hasProperty('buildIndex')) {
    project.version = basicVersion + '.' + project.buildIndex
    customVersionCode = '' + project.buildIndex
} else {
    project.version = 'debug'
}

android {
    compileSdkVersion 20
    compileSdkVersion 20
    buildToolsVersion '20.0'
    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 20
        versionCode Integer.valueOf(customVersionCode)
        versionName project.version
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        release {
            keyAlias = "main"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'            
        }

        applicationVariants.all { variant ->
            def file = variant.outputFile
            //  Dirty hack
            if (file.name == "sample-release.apk") {
                variant.outputFile = new File("$project.buildDir/apk/DroidKitSample-" + defaultConfig.versionName + ".apk")
            }
        }
    }

    if (project.hasProperty('storeFile') &&
        project.hasProperty('storePassword') &&
        project.hasProperty('keyPassword')) {
        android.signingConfigs.release.storeFile = file(storeFile)
        android.signingConfigs.release.storePassword = storePassword
        android.signingConfigs.release.keyPassword = keyPassword
    } else {
        buildTypes.release.signingConfig = null
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:20.+'
    compile 'com.google.protobuf:protobuf-java:2.5.0'
    compile project(':engines')
}
